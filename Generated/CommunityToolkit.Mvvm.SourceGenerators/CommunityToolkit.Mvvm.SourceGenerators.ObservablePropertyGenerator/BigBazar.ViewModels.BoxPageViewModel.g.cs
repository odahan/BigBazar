// <auto-generated/>
#pragma warning disable
#nullable enable
namespace BigBazar.ViewModels
{
    /// <inheritdoc/>
    partial class BoxPageViewModel
    {
        /// <inheritdoc cref="selectedArea"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::BigBazar.Models.Area? SelectedArea
        {
            get => selectedArea;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::BigBazar.Models.Area?>.Default.Equals(selectedArea, value))
                {
                    global::BigBazar.Models.Area? __oldValue = selectedArea;
                    OnSelectedAreaChanging(value);
                    OnSelectedAreaChanging(__oldValue, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SelectedArea);
                    selectedArea = value;
                    OnSelectedAreaChanged(value);
                    OnSelectedAreaChanged(__oldValue, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SelectedArea);
                }
            }
        }

        /// <inheritdoc cref="storageAreas"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Area> StorageAreas
        {
            get => storageAreas;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("storageAreas")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Area>>.Default.Equals(storageAreas, value))
                {
                    OnStorageAreasChanging(value);
                    OnStorageAreasChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.StorageAreas);
                    storageAreas = value;
                    OnStorageAreasChanged(value);
                    OnStorageAreasChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.StorageAreas);
                }
            }
        }

        /// <inheritdoc cref="currentBox"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::BigBazar.Models.Box CurrentBox
        {
            get => currentBox;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("currentBox")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::BigBazar.Models.Box>.Default.Equals(currentBox, value))
                {
                    OnCurrentBoxChanging(value);
                    OnCurrentBoxChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.CurrentBox);
                    currentBox = value;
                    OnCurrentBoxChanged(value);
                    OnCurrentBoxChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.CurrentBox);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.Description);
                }
            }
        }

        /// <inheritdoc cref="description"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string Description
        {
            get => description;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("description")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(description, value))
                {
                    OnDescriptionChanging(value);
                    OnDescriptionChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.Description);
                    description = value;
                    OnDescriptionChanged(value);
                    OnDescriptionChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.Description);
                }
            }
        }

        /// <inheritdoc cref="isModified"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public bool IsModified
        {
            get => isModified;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<bool>.Default.Equals(isModified, value))
                {
                    OnIsModifiedChanging(value);
                    OnIsModifiedChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.IsModified);
                    isModified = value;
                    OnIsModifiedChanged(value);
                    OnIsModifiedChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.IsModified);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="SelectedArea"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedArea"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedAreaChanging(global::BigBazar.Models.Area? value);
        /// <summary>Executes the logic for when <see cref="SelectedArea"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedArea"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedAreaChanging(global::BigBazar.Models.Area? oldValue, global::BigBazar.Models.Area? newValue);
        /// <summary>Executes the logic for when <see cref="SelectedArea"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedArea"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedAreaChanged(global::BigBazar.Models.Area? value);
        /// <summary>Executes the logic for when <see cref="SelectedArea"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedArea"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedAreaChanged(global::BigBazar.Models.Area? oldValue, global::BigBazar.Models.Area? newValue);
        /// <summary>Executes the logic for when <see cref="StorageAreas"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="StorageAreas"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnStorageAreasChanging(global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Area> value);
        /// <summary>Executes the logic for when <see cref="StorageAreas"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="StorageAreas"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnStorageAreasChanging(global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Area>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Area> newValue);
        /// <summary>Executes the logic for when <see cref="StorageAreas"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="StorageAreas"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnStorageAreasChanged(global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Area> value);
        /// <summary>Executes the logic for when <see cref="StorageAreas"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="StorageAreas"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnStorageAreasChanged(global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Area>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Area> newValue);
        /// <summary>Executes the logic for when <see cref="CurrentBox"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="CurrentBox"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentBoxChanging(global::BigBazar.Models.Box value);
        /// <summary>Executes the logic for when <see cref="CurrentBox"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="CurrentBox"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentBoxChanging(global::BigBazar.Models.Box? oldValue, global::BigBazar.Models.Box newValue);
        /// <summary>Executes the logic for when <see cref="CurrentBox"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="CurrentBox"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentBoxChanged(global::BigBazar.Models.Box value);
        /// <summary>Executes the logic for when <see cref="CurrentBox"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="CurrentBox"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnCurrentBoxChanged(global::BigBazar.Models.Box? oldValue, global::BigBazar.Models.Box newValue);
        /// <summary>Executes the logic for when <see cref="Description"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Description"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDescriptionChanging(string value);
        /// <summary>Executes the logic for when <see cref="Description"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Description"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDescriptionChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="Description"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Description"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDescriptionChanged(string value);
        /// <summary>Executes the logic for when <see cref="Description"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Description"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDescriptionChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="IsModified"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="IsModified"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnIsModifiedChanging(bool value);
        /// <summary>Executes the logic for when <see cref="IsModified"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="IsModified"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnIsModifiedChanging(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="IsModified"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="IsModified"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnIsModifiedChanged(bool value);
        /// <summary>Executes the logic for when <see cref="IsModified"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="IsModified"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnIsModifiedChanged(bool oldValue, bool newValue);
    }
}