// <auto-generated/>
#pragma warning disable
#nullable enable
namespace BigBazar.ViewModels
{
    /// <inheritdoc/>
    partial class GalleryPageViewModel
    {
        /// <inheritdoc cref="photoNumberFilter"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public int PhotoNumberFilter
        {
            get => photoNumberFilter;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<int>.Default.Equals(photoNumberFilter, value))
                {
                    OnPhotoNumberFilterChanging(value);
                    OnPhotoNumberFilterChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.PhotoNumberFilter);
                    photoNumberFilter = value;
                    OnPhotoNumberFilterChanged(value);
                    OnPhotoNumberFilterChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.PhotoNumberFilter);
                }
            }
        }

        /// <inheritdoc cref="photos"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Photo> Photos
        {
            get => photos;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("photos")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Photo>>.Default.Equals(photos, value))
                {
                    OnPhotosChanging(value);
                    OnPhotosChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.Photos);
                    photos = value;
                    OnPhotosChanged(value);
                    OnPhotosChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.Photos);
                }
            }
        }

        /// <inheritdoc cref="screenWidth"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public double ScreenWidth
        {
            get => screenWidth;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<double>.Default.Equals(screenWidth, value))
                {
                    OnScreenWidthChanging(value);
                    OnScreenWidthChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.ScreenWidth);
                    screenWidth = value;
                    OnScreenWidthChanged(value);
                    OnScreenWidthChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.ScreenWidth);
                }
            }
        }

        /// <inheritdoc cref="isGoingToPhotoDetail"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public bool IsGoingToPhotoDetail
        {
            get => isGoingToPhotoDetail;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<bool>.Default.Equals(isGoingToPhotoDetail, value))
                {
                    OnIsGoingToPhotoDetailChanging(value);
                    OnIsGoingToPhotoDetailChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.IsGoingToPhotoDetail);
                    isGoingToPhotoDetail = value;
                    OnIsGoingToPhotoDetailChanged(value);
                    OnIsGoingToPhotoDetailChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.IsGoingToPhotoDetail);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="PhotoNumberFilter"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PhotoNumberFilter"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPhotoNumberFilterChanging(int value);
        /// <summary>Executes the logic for when <see cref="PhotoNumberFilter"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PhotoNumberFilter"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPhotoNumberFilterChanging(int oldValue, int newValue);
        /// <summary>Executes the logic for when <see cref="PhotoNumberFilter"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PhotoNumberFilter"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPhotoNumberFilterChanged(int value);
        /// <summary>Executes the logic for when <see cref="PhotoNumberFilter"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PhotoNumberFilter"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPhotoNumberFilterChanged(int oldValue, int newValue);
        /// <summary>Executes the logic for when <see cref="Photos"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Photos"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPhotosChanging(global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Photo> value);
        /// <summary>Executes the logic for when <see cref="Photos"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Photos"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPhotosChanging(global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Photo>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Photo> newValue);
        /// <summary>Executes the logic for when <see cref="Photos"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Photos"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPhotosChanged(global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Photo> value);
        /// <summary>Executes the logic for when <see cref="Photos"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Photos"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPhotosChanged(global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Photo>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::BigBazar.Models.Photo> newValue);
        /// <summary>Executes the logic for when <see cref="ScreenWidth"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="ScreenWidth"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnScreenWidthChanging(double value);
        /// <summary>Executes the logic for when <see cref="ScreenWidth"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="ScreenWidth"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnScreenWidthChanging(double oldValue, double newValue);
        /// <summary>Executes the logic for when <see cref="ScreenWidth"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="ScreenWidth"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnScreenWidthChanged(double value);
        /// <summary>Executes the logic for when <see cref="ScreenWidth"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="ScreenWidth"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnScreenWidthChanged(double oldValue, double newValue);
        /// <summary>Executes the logic for when <see cref="IsGoingToPhotoDetail"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="IsGoingToPhotoDetail"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnIsGoingToPhotoDetailChanging(bool value);
        /// <summary>Executes the logic for when <see cref="IsGoingToPhotoDetail"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="IsGoingToPhotoDetail"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnIsGoingToPhotoDetailChanging(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="IsGoingToPhotoDetail"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="IsGoingToPhotoDetail"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnIsGoingToPhotoDetailChanged(bool value);
        /// <summary>Executes the logic for when <see cref="IsGoingToPhotoDetail"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="IsGoingToPhotoDetail"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnIsGoingToPhotoDetailChanged(bool oldValue, bool newValue);
    }
}